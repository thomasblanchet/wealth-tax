{"version":3,"sources":["WealthTaxBracket.js","WealthTaxSchedule.js","WealthTaxRevenue.js","WealthTaxSimulator.js","index.js"],"names":["WealthTaxBracket","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","type","props","threshold","onChange","handleChangeThreshold","step","min","placeholder","marginalRate","handleChangeMarginalRate","max","disabled","removeDisabled","onClick","onClickRemove","React","Component","WealthTaxSchedule","_this","scope","style","width","thresholds","map","i","WealthTaxBracket_WealthTaxBracket","marginalRates","popImpacted","removeBracket","length","WealthTaxRevenue","rowSpan","colSpan","popShortRun","toPrecision","popLongRun","taxRevenueShortRun","taxRevenueLongRun","totalPopShortRun","totalPopLongRun","totalTaxRevenueShortRun","totalTaxRevenueLongRun","ChartJS","register","CategoryScale","LinearScale","BarElement","PointElement","LineElement","Title","Tooltip","Legend","WealthTaxSimulator","call","wealthData","require","handleChangeTaxAvoidanceElasticity","bind","assertThisInitialized","handleChangeConsumptionElasticity","handleChangeMobilityAdjustment","estimateBaselineInequality","state","consumptionElasticity","taxAvoidanceElasticity","mobilityAdjustment","n","shareTop10","shareTop5","shareTop1","shareTop01","shareTop001","cumWeights","wgt","p","setState","push","indexes","Array","fill","elem","sort","j","idx","getSortedBrackets","mtr","Math","pow","Infinity","indexesAbove","findIndex","w","slice","reduce","x","y","declaredWealth","k","taxAvoidance","extraConsumption","consumptionResponse","taxPaid","_this2","longRunReweighting","dw","exp","longRunWeights","sumLongRunWeights","_this3","longRunWealth","avgMarginalRate","shareLongRunTop10","shareLongRunTop5","shareLongRunTop1","shareLongRunTop01","shareLongRunTop001","inequalityChartOptions","responsive","aspectRatio","plugins","legend","position","labels","color","font","size","tooltip","callbacks","label","context","dataset","parsed","interaction","mode","intersect","scales","stacked","grid","borderColor","tickColor","borderWidth","lineWidth","ticks","title","display","text","inequalityChartData","datasets","data","backgroundColor","stack","_this4","altMarginalRatesGrid","altTaxRevenue","altAvgMarginalRatesCoefs","altAvgMarginalRatesCoefsMean","coef","_loop","altMarginalRates","altDeclaredWealth","estimateDeclaredWealth","altExtraConsumption","estimateExtraConsumption","altTaxPaid","estimateTaxPaid","altLongRunWeights","estimateLongRunWeights","lafferCurve","unshift","estimateLafferCurve","lafferChartData","pointRadius","showLine","lafferChartOptions","elements","line","tension","brackets","sortedThresholds","sortedMarginalRates","rate","estimateTaxStatistics","estimateLongRunInequality","makeInequalityChart","makeLafferChart","splice","event","Number","target","toastElem","document","getElementById","Toast","show","_this5","runSimulation","WealthTaxSchedule_WealthTaxSchedule","bracketId","estimatePopAbove","id","addBracketAbove","sortBrackets","resetBrackets","htmlFor","WealthTaxRevenue_WealthTaxRevenue","dist","options","ReactDOM","createRoot","render","WealthTaxSimulator_WealthTaxSimulator"],"mappings":"6owLAEaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACVH,EAAAC,EAAAC,cAAA,SACIE,KAAK,SACLD,UAAU,eACVJ,MAAOR,KAAKc,MAAMC,UAClBC,SAAUhB,KAAKc,MAAMG,sBACrBC,KAAK,MACLC,IAAI,IACJC,YAAY,2BAGpBX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACVH,EAAAC,EAAAC,cAAA,SACIE,KAAK,SACLD,UAAU,eACVJ,MAAOR,KAAKc,MAAMO,aAClBL,SAAUhB,KAAKc,MAAMQ,yBACrBJ,KAAK,MACLC,IAAI,IACJI,IAAI,KACJH,YAAY,wBAGpBX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACVH,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLD,UAAU,wBACVY,SAAUxB,KAAKc,MAAMW,eACrBC,QAAS1B,KAAKc,MAAMa,eAEpBlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAlCrChB,EAAA,CAAsCgC,IAAMC,WCC/BC,EAAb,SAAAjC,GAAA,SAAAiC,IAAA,OAAAhC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8B,GAAAhC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgC,GAAA3B,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAgC,EAAAjC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAgC,EAAA,EAAAvB,IAAA,SAAAC,MAAA,WACa,IAAAuB,EAAA/B,KACL,OACIS,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,MAAMpB,UAAU,OAAOqB,MAAO,CAACC,MAAO,QAAhD,6BACAzB,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,MAAMpB,UAAU,OAAOqB,MAAO,CAACC,MAAO,QAAhD,yBACAzB,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,MAAMpB,UAAU,WAGlCH,EAAAC,EAAAC,cAAA,aAEIX,KAAKc,MAAMqB,WAAWC,IAAI,SAACrB,EAAWsB,GAAZ,OACtB5B,EAAAC,EAAAC,cAAC2B,EAAD,CACI/B,IAAK8B,EACLtB,UAAWgB,EAAKjB,MAAMqB,WAAWE,GACjChB,aAAcU,EAAKjB,MAAMyB,cAAcF,GACvCG,YAAaT,EAAKjB,MAAM0B,YAAYH,GACpCpB,sBAAuBc,EAAKjB,MAAMG,sBAAsBoB,GACxDf,yBAA0BS,EAAKjB,MAAMQ,yBAAyBe,GAC9DV,cAAeI,EAAKjB,MAAM2B,cAAcJ,GACxCZ,eAAiD,IAAjCM,EAAKjB,MAAMqB,WAAWO,iBAtBlEZ,EAAA,CAAuCF,IAAMC,WCDhCc,EAAb,SAAA9C,GAAA,SAAA8C,IAAA,OAAA7C,OAAAC,EAAA,EAAAD,CAAAE,KAAA2C,GAAA7C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6C,GAAAxC,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA6C,EAAA9C,GAAAC,OAAAQ,EAAA,EAAAR,CAAA6C,EAAA,EAAApC,IAAA,SAAAC,MAAA,WACa,IAAAuB,EAAA/B,KACL,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kCACbH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,MAAMY,QAAQ,KAAxB,WACAnC,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,MAAMa,QAAQ,KAAxB,4BACApC,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,MAAMa,QAAQ,KAAxB,mCAEJpC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,OAAV,aACAvB,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,OAAV,YACAvB,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,OAAV,aACAvB,EAAAC,EAAAC,cAAA,MAAIqB,MAAM,OAAV,cAGRvB,EAAAC,EAAAC,cAAA,aAEQX,KAAKc,MAAMqB,WAAWC,IAAI,SAACrB,EAAWsB,GAAZ,OACtB5B,EAAAC,EAAAC,cAAA,MAAIJ,IAAK8B,GACL5B,EAAAC,EAAAC,cAAA,cAAMoB,EAAKjB,MAAMqB,WAAWE,GAA5B,KACA5B,EAAAC,EAAAC,cAAA,WAAM,IAAIoB,EAAKjB,MAAMgC,YAAYT,IAAIU,YAAY,GAAjD,KACAtC,EAAAC,EAAAC,cAAA,WAAM,IAAIoB,EAAKjB,MAAMkC,WAAWX,IAAIU,YAAY,GAAhD,KACAtC,EAAAC,EAAAC,cAAA,WAAM,IAAIoB,EAAKjB,MAAMmC,mBAAmBZ,IAAIU,YAAY,GAAxD,KACAtC,EAAAC,EAAAC,cAAA,WAAM,IAAIoB,EAAKjB,MAAMoC,kBAAkBb,IAAIU,YAAY,GAAvD,SAKhBtC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,WAAM,IAAIX,KAAKc,MAAMqC,kBAAkBJ,YAAY,GAAnD,KACAtC,EAAAC,EAAAC,cAAA,WAAM,IAAIX,KAAKc,MAAMsC,iBAAiBL,YAAY,GAAlD,KACAtC,EAAAC,EAAAC,cAAA,WAAM,IAAIX,KAAKc,MAAMuC,yBAAyBN,YAAY,GAA1D,KACAtC,EAAAC,EAAAC,cAAA,WAAM,IAAIX,KAAKc,MAAMwC,wBAAwBP,YAAY,GAAzD,aArC5BJ,EAAA,CAAsCf,IAAMC,2BCiB5C0B,IAAQC,SACJC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGG,IAAMC,EAAb,SAAApE,GACI,SAAAoE,EAAYnD,GAAO,IAAAiB,EAAA,OAAAjC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiE,IACflC,EAAAjC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmE,GAAAC,KAAAlE,KAAMc,KAEDqD,WAAaC,EAAQ,IAE1BrC,EAAKsC,mCAAqCtC,EAAKsC,mCAAmCC,KAAxCxE,OAAAyE,EAAA,EAAAzE,QAAAyE,EAAA,EAAAzE,CAAAiC,KAC1CA,EAAKyC,kCAAoCzC,EAAKyC,kCAAkCF,KAAvCxE,OAAAyE,EAAA,EAAAzE,QAAAyE,EAAA,EAAAzE,CAAAiC,KACzCA,EAAK0C,+BAAiC1C,EAAK0C,+BAA+BH,KAApCxE,OAAAyE,EAAA,EAAAzE,QAAAyE,EAAA,EAAAzE,CAAAiC,KACtCA,EAAKd,sBAAwBc,EAAKd,sBAAsBqD,KAA3BxE,OAAAyE,EAAA,EAAAzE,QAAAyE,EAAA,EAAAzE,CAAAiC,KAC7BA,EAAKT,yBAA2BS,EAAKT,yBAAyBgD,KAA9BxE,OAAAyE,EAAA,EAAAzE,QAAAyE,EAAA,EAAAzE,CAAAiC,KAEhCA,EAAK2C,6BAEL3C,EAAK4C,MAAQ,CACTxC,WAAY,CAAC,GAAI,IAAK,IAAK,KAC3BI,cAAe,CAAC,EAAG,EAAG,EAAG,IACzBqC,sBAAuB,EACvBC,uBAAwB,EACxBC,mBAAoB,GAlBT/C,EADvB,OAAAjC,OAAAO,EAAA,EAAAP,CAAAmE,EAAApE,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmE,EAAA,EAAA1D,IAAA,6BAAAC,MAAA,WAuBQ,IAAIuE,EAAI/E,KAAKmE,WAAL,OAA0BzB,OAClC1C,KAAKgF,WAAa,EAClBhF,KAAKiF,UAAY,EACjBjF,KAAKkF,UAAY,EACjBlF,KAAKmF,WAAa,EAClBnF,KAAKoF,YAAc,EAEnB,IADA,IAAIC,EAAa,EACRhD,EAAI,EAAGA,EAAI0C,EAAG1C,IAAK,CACxB,IAAIiD,EAAMtF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAExCkD,EAAI,KADRF,GAAcC,GACStF,KAAKmE,WAAL,WACvB,GAAIoB,EAAI,IACJvF,KAAKoF,aAAeE,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKmF,YAAeG,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKkF,WAAeI,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKiF,WAAeK,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKgF,YAAeM,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,QACvD,GAAIkD,EAAI,GACXvF,KAAKmF,YAAeG,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKkF,WAAeI,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKiF,WAAeK,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKgF,YAAeM,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,QACvD,GAAIkD,EAAI,EACXvF,KAAKkF,WAAeI,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKiF,WAAeK,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKgF,YAAeM,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,QACvD,GAAIkD,EAAI,EACXvF,KAAKiF,WAAeK,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GAC1DrC,KAAKgF,YAAeM,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,OACvD,MAAIkD,EAAI,IAGX,MAFAvF,KAAKgF,YAAeM,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,IAKlErC,KAAKgF,WAAchF,KAAKgF,WAAchF,KAAKmE,WAAL,eACtCnE,KAAKiF,UAAcjF,KAAKiF,UAAcjF,KAAKmE,WAAL,eACtCnE,KAAKkF,UAAclF,KAAKkF,UAAclF,KAAKmE,WAAL,eACtCnE,KAAKmF,WAAcnF,KAAKmF,WAAcnF,KAAKmE,WAAL,eACtCnE,KAAKoF,YAAcpF,KAAKoF,YAAcpF,KAAKmE,WAAL,iBA9D9C,CAAA5D,IAAA,gBAAAC,MAAA,WAiEQR,KAAKwF,SAAS,CACVrD,WAAY,CAAC,GAAI,IAAK,IAAK,KAC3BI,cAAe,CAAC,EAAG,EAAG,EAAG,QAnErC,CAAAhC,IAAA,oBAAAC,MAAA,WA2EQ,IAJA,IAAIuE,EAAI/E,KAAK2E,MAAMxC,WAAWO,OAE1BP,EAAa,GACbI,EAAgB,GACXF,EAAI,EAAGA,EAAI0C,EAAG1C,IACa,MAA5BrC,KAAK2E,MAAMxC,WAAWE,GAA4C,MAA/BrC,KAAK2E,MAAMpC,cAAcF,KAC5DF,EAAWsD,KAAKzF,KAAK2E,MAAMxC,WAAWE,IACtCE,EAAckD,KAAKzF,KAAK2E,MAAMpC,cAAcF,KAGpD0C,EAAI5C,EAAWO,OAEf,IAAIgD,EAAU,IAAIC,MAAMZ,GASxB,OARAW,EAAQE,KAAK,GAGbF,GAFAA,EAAUA,EAAQtD,IAAI,SAACyD,EAAMxD,GAAP,OAAaA,KAEjByD,KAAK,SAACzD,EAAG0D,GAAJ,OAAU5D,EAAWE,GAAKF,EAAW4D,KAE5D5D,EAAauD,EAAQtD,IAAI,SAAC4D,EAAK3D,GAAN,OAAYF,EAAW6D,KAChDzD,EAAgBmD,EAAQtD,IAAI,SAAC4D,EAAK3D,GAAN,OAAYE,EAAcyD,KAE/C,CACH7D,WAAYA,EACZI,cAAeA,KA9F3B,CAAAhC,IAAA,eAAAC,MAAA,WAkGQR,KAAKwF,SAASxF,KAAKiG,uBAlG3B,CAAA1F,IAAA,eAAAC,MAAA,SAoGiB0F,GACT,OAAIA,GAAO,EACA,EACAA,GAAO,EACP,EAEAC,KAAKC,IAAI,EAAIF,EAAKlG,KAAK2E,MAAME,0BA1GhD,CAAAtE,IAAA,sBAAAC,MAAA,SA6GwB0F,GAChB,OAAIA,GAAO,EACAG,IACAH,GAAO,EACP,EAEAC,KAAKC,IAAI,EAAIF,GAAMlG,KAAK2E,MAAMC,uBAAyB,IAnH1E,CAAArE,IAAA,mBAAAC,MAAA,SAsHqBO,GACb,IAAIuF,EAAetG,KAAKmE,WAAL,OAA0BoC,UAAU,SAACC,GAAD,OAAOA,EAAIzF,IAElE,OADef,KAAKmE,WAAL,OAA0BsC,MAAMH,GAAcI,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GACrE5G,KAAKmE,WAAL,aAzHxB,CAAA5D,IAAA,yBAAAC,MAAA,SA2H2B2B,EAAYI,GAK/B,IAJA,IAAIwC,EAAI/E,KAAKmE,WAAL,OAA0BzB,OAC9BmE,EAAiB7G,KAAKmE,WAAL,OAA0BsC,QAE3CK,EAAI,EACCzE,EAAI,EAAGA,EAAI0C,EAAG1C,IAAK,CACxB,KAAOyE,EAAI,EAAI3E,EAAWO,QAAU1C,KAAKmE,WAAL,OAA0B9B,IAAMF,EAAW2E,EAAI,IAC/EA,IAEA9G,KAAKmE,WAAL,OAA0B9B,IAAMF,EAAW2E,KAC3CD,EAAexE,GAAKwE,EAAexE,GAAGrC,KAAK+G,aAAaxE,EAAcuE,KAG9E,OAAOD,IAxIf,CAAAtG,IAAA,2BAAAC,MAAA,SA0I6B2B,EAAYI,GACjC,IAAIwC,EAAI/E,KAAKmE,WAAL,OAA0BzB,OAC9BsE,EAAmB,IAAIrB,MAAMZ,GACjCiC,EAAiBpB,KAAK,GAGtB,IADA,IAAIkB,EAAI,EACCzE,EAAI,EAAGA,EAAI0C,EAAG1C,IAAK,CACxB,KAAOyE,EAAI,EAAI3E,EAAWO,QAAU1C,KAAKmE,WAAL,OAA0B9B,IAAMF,EAAW2E,EAAI,IAC/EA,IAEA9G,KAAKmE,WAAL,OAA0B9B,IAAMF,EAAW2E,KAC3CE,EAAiB3E,GAAKrC,KAAKmE,WAAL,YAA+B9B,GAAGrC,KAAKiH,oBAAoB1E,EAAcuE,KAGvG,OAAOE,IAxJf,CAAAzG,IAAA,kBAAAC,MAAA,SA0JoB2B,EAAYI,EAAesE,GACvC,IAAI9B,EAAI8B,EAAenE,OACnBwE,EAAU,IAAIvB,MAAMZ,GACxBmC,EAAQtB,KAAK,GACb,IAAK,IAAIkB,EAAI,EAAGA,EAAI3E,EAAWO,OAAQoE,IACnC,IAAK,IAAIzE,EAAI,EAAGA,EAAI0C,EAAG1C,IACfyE,EAAI,EAAI3E,EAAWO,QAAUmE,EAAexE,IAAMF,EAAW2E,EAAI,GACjEI,EAAQ7E,KAAOF,EAAW2E,EAAI,GAAK3E,EAAW2E,IAAIvE,EAAcuE,GACzDD,EAAexE,IAAMF,EAAW2E,KACvCI,EAAQ7E,KAAOwE,EAAexE,GAAKF,EAAW2E,IAAIvE,EAAcuE,IAI5E,OAAOI,IAvKf,CAAA3G,IAAA,yBAAAC,MAAA,SAyK2B0G,EAASF,GAAkB,IAAAG,EAAAnH,KAC1C+E,EAAImC,EAAQxE,OAEZ0E,EAAqB,IAAIzB,MAAMZ,GACnCqC,EAAmBxB,KAAK,GACxB,IAAK,IAAIvD,EAAI,EAAGA,EAAI0C,EAAG1C,IAAK,CACxB,IAAIgF,EAAKrH,KAAKmE,WAAL,OAA0B9B,GAAKrC,KAAKmE,WAAL,OAA0B9B,EAAI,GACtE+E,EAAmB/E,GAAK+E,EAAmB/E,EAAI,GAC3C,GAAG6E,EAAQ7E,GAAK2E,EAAiB3E,IAAI8D,KAAKC,IAAIpG,KAAK2E,MAAMG,mBAAmB9E,KAAKmE,WAAL,UAA6B9B,GAAI,GAAGgF,EAExHD,EAAqBA,EAAmBhF,IAAI,SAACwE,GAAD,OAAOT,KAAKmB,KAAKV,KAG7D,IAAIW,EAAiBvH,KAAKmE,WAAL,OAA0B/B,IAC3C,SAACoE,EAAGnE,GAAJ,OAAUmE,EAAEY,EAAmB/E,KAE/BmF,EAAoBD,EAAeb,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAI/D,OAHAW,EAAiBA,EAAenF,IAC5B,SAACoE,GAAD,OAAOA,GAAGW,EAAKhD,WAAL,WAA8BqD,OA3LpD,CAAAjH,IAAA,wBAAAC,MAAA,SA+L0B2B,EAAYI,EAAe2E,EAASK,GAAgB,IAAAE,EAAAzH,KAClE+E,EAAIwC,EAAe7E,OAEvB1C,KAAK0H,cAAgB1H,KAAKmE,WAAL,OAChB/B,IAAI,SAACoE,EAAGnE,GAAJ,OAAUmE,EAAEe,EAAelF,KAC/BqE,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAE7B5G,KAAKiD,mBAAqB,IAAI0C,MAAMxD,EAAWO,QAC/C1C,KAAKiD,mBAAmB2C,KAAK,GAC7B5F,KAAKkD,kBAAoB,IAAIyC,MAAMxD,EAAWO,QAC9C1C,KAAKkD,kBAAkB0C,KAAK,GAC5B5F,KAAK8C,YAAc,IAAI6C,MAAMxD,EAAWO,QACxC1C,KAAK8C,YAAY8C,KAAK,GACtB5F,KAAKgD,WAAa,IAAI2C,MAAMxD,EAAWO,QACvC1C,KAAKgD,WAAW4C,KAAK,GAErB5F,KAAK2H,gBAAkB,EAGvB,IADA,IAAIb,EAAI,EACCzE,EAAI,EAAGA,EAAI0C,EAAG1C,IAAK,CACxB,KAAOyE,EAAI,EAAI3E,EAAWO,QAAU1C,KAAKmE,WAAL,OAA0B9B,IAAMF,EAAW2E,EAAI,IAC/EA,IAEA9G,KAAKmE,WAAL,OAA0B9B,IAAMF,EAAW2E,KAC3C9G,KAAKgD,WAAW8D,IAAMS,EAAelF,GACrCrC,KAAK8C,YAAYgE,IAAM9G,KAAKmE,WAAL,OAA0B9B,GAEjDrC,KAAKkD,kBAAkB4D,IAAMI,EAAQ7E,GAAGkF,EAAelF,GACvDrC,KAAKiD,mBAAmB6D,IAAMI,EAAQ7E,GAAGrC,KAAKmE,WAAL,OAA0B9B,GAEnErC,KAAK2H,iBAAmBpF,EAAcuE,GAAG9G,KAAKmE,WAAL,OAA0B9B,IAG3ErC,KAAKkD,kBAAoBlD,KAAKkD,kBAAkBd,IAAI,SAACwE,EAAGvE,GAAJ,OAAUuE,EAAEa,EAAKtD,WAAL,iBAChEnE,KAAKiD,mBAAqBjD,KAAKiD,mBAAmBb,IAAI,SAACwE,EAAGvE,GAAJ,OAAUuE,EAAEa,EAAKtD,WAAL,iBAClEnE,KAAKgD,WAAahD,KAAKgD,WAAWZ,IAAI,SAACwE,EAAGvE,GAAJ,OAAUuE,EAAEa,EAAKtD,WAAL,aAClDnE,KAAK8C,YAAc9C,KAAK8C,YAAYV,IAAI,SAACwE,EAAGvE,GAAJ,OAAUuE,EAAEa,EAAKtD,WAAL,aAEpDnE,KAAKsD,uBAAyBtD,KAAKkD,kBAAkBwD,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAC7E5G,KAAKqD,wBAA0BrD,KAAKiD,mBAAmByD,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAC/E5G,KAAKoD,gBAAkBpD,KAAKgD,WAAW0D,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAC/D5G,KAAKmD,iBAAmBnD,KAAK8C,YAAY4D,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAEjE5G,KAAK2H,gBAAkB3H,KAAK2H,iBAAiB3H,KAAKmD,iBAAiBnD,KAAKmE,WAAL,YAGnEnE,KAAKkD,kBAAoBlD,KAAKkD,kBAAkBd,IAAI,SAACwE,GAAD,OAAOA,EAAI,KAAO,EAAIA,IAC1E5G,KAAKiD,mBAAqBjD,KAAKiD,mBAAmBb,IAAI,SAACwE,GAAD,OAAOA,EAAI,KAAO,EAAIA,IAC5E5G,KAAKgD,WAAahD,KAAKgD,WAAWZ,IAAI,SAACwE,GAAD,OAAOA,EAAI,KAAO,EAAIA,IAC5D5G,KAAK8C,YAAc9C,KAAK8C,YAAYV,IAAI,SAACwE,GAAD,OAAOA,EAAI,KAAO,EAAIA,MAhPtE,CAAArG,IAAA,4BAAAC,MAAA,SAkP8B0G,EAASK,GAC/B,IAAIxC,EAAIwC,EAAe7E,OAEvB1C,KAAK4H,kBAAoB,EACzB5H,KAAK6H,iBAAmB,EACxB7H,KAAK8H,iBAAmB,EACxB9H,KAAK+H,kBAAoB,EACzB/H,KAAKgI,mBAAqB,EAE1B,IADA,IAAI3C,EAAa,EACRhD,EAAI,EAAGA,EAAI0C,EAAG1C,IAAK,CACxB,IAAIiD,EAAMiC,EAAexC,EAAI1C,EAAI,GAE7BkD,EAAI,KADRF,GAAcC,GACStF,KAAKmE,WAAL,WACvB,GAAIoB,EAAI,IACJvF,KAAKgI,oBAAsB1C,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK+H,mBAAsBzC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK8H,kBAAsBxC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK6H,kBAAsBvC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK4H,mBAAsBtC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,QAC9D,GAAIkD,EAAI,GACXvF,KAAK+H,mBAAsBzC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK8H,kBAAsBxC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK6H,kBAAsBvC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK4H,mBAAsBtC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,QAC9D,GAAIkD,EAAI,EACXvF,KAAK8H,kBAAsBxC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK6H,kBAAsBvC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK4H,mBAAsBtC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,QAC9D,GAAIkD,EAAI,EACXvF,KAAK6H,kBAAsBvC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,GACjErC,KAAK4H,mBAAsBtC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,OAC9D,MAAIkD,EAAI,IAGX,MAFAvF,KAAK4H,mBAAsBtC,EAAItF,KAAKmE,WAAL,OAA0BY,EAAI1C,EAAI,IAKzErC,KAAK4H,kBAAqB5H,KAAK4H,kBAAqB5H,KAAK0H,cACzD1H,KAAK6H,iBAAqB7H,KAAK6H,iBAAqB7H,KAAK0H,cACzD1H,KAAK8H,iBAAqB9H,KAAK8H,iBAAqB9H,KAAK0H,cACzD1H,KAAK+H,kBAAqB/H,KAAK+H,kBAAqB/H,KAAK0H,cACzD1H,KAAKgI,mBAAqBhI,KAAKgI,mBAAqBhI,KAAK0H,gBA3RjE,CAAAnH,IAAA,sBAAAC,MAAA,WA8RQR,KAAKiI,uBAAyB,CAC1BC,YAAY,EACZC,YAAa,IACbC,QAAS,CACLC,OAAQ,CACJC,SAAU,SACVC,OAAQ,CACJC,MAAO,QACPC,KAAM,CACFC,KAAM,MAIlBC,QAAS,CACLC,UAAW,CACPC,MAAO,SAASC,GACZ,IAAID,EAAQC,EAAQC,QAAQF,OAAS,GASrC,OAPIA,IACAA,GAAS,MAEY,OAArBC,EAAQE,OAAOpC,IACfiC,GAASC,EAAQE,OAAOpC,EAAE7D,YAAY,GACtC8F,GAAS,KAENA,MAKvBI,YAAa,CACTC,KAAM,QACNC,WAAW,GAEfC,OAAQ,CACJzC,EAAG,CACC0C,SAAS,EACTC,KAAM,CACFd,MAAO,YACPe,YAAa,YACbC,UAAW,YACXC,YAAa,EACbC,UAAW,GAEfC,MAAO,CACHnB,MAAO,QACPC,KAAM,CACFC,KAAM,MAIlB9B,EAAG,CACCyC,SAAS,EACTO,MAAO,CACHC,SAAS,EACTC,KAAM,oBACNtB,MAAO,QACPC,KAAM,CACFC,KAAM,KAGdY,KAAM,CACFd,MAAO,YACPe,YAAa,YACbC,UAAW,YACXC,YAAa,EACbC,UAAW,GAEfC,MAAO,CACHnB,MAAO,QACPC,KAAM,CACFC,KAAM,QAQ1B1I,KAAK+J,oBAAsB,CACvBxB,OAFW,CAAC,UAAW,SAAU,SAAU,WAAY,aAGvDyB,SAAU,CACN,CACInB,MAAO,uBACPoB,KAAM,CAACjK,KAAKgF,WAAYhF,KAAKiF,UAAWjF,KAAKkF,UACzClF,KAAKmF,WAAYnF,KAAKoF,aAAahD,IAAI,SAACuE,EAAGtE,GAAJ,OAAU,IAAIsE,IACzDuD,gBAAiB,UACjBC,MAAO,KAEX,CACItB,MAAO,uCACPoB,KAAM,CAACjK,KAAK4H,kBAAmB5H,KAAK6H,iBAChC7H,KAAK8H,iBAAkB9H,KAAK+H,kBAC5B/H,KAAKgI,oBAAoB5F,IAAI,SAACuE,EAAGtE,GAAJ,OAAU,IAAIsE,IAC/CuD,gBAAiB,UACjBC,MAAO,SA7X3B,CAAA5J,IAAA,sBAAAC,MAAA,SAkYwB2B,EAAYI,GAAe,IAAA6H,EAAApK,KACvC+E,EAAI/E,KAAKmE,WAAL,OAA0BzB,OAG9B2H,EAAuB,CACvB,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GACxC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC3B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC5B,GAAI,GAAI,GAAI,GAAI,GAAI,MAEpBC,EAAgB,IAAI3E,MAAM0E,EAAqB3H,QACnD4H,EAAc1E,KAAK,GAOnB,IAHA,IAAI2E,EAA2BhI,EAAcH,IAAI,SAAC8D,GAAD,OAAS,EAAIA,IAC1DsE,EAA+B,EAC/B1D,EAAI,EACCzE,EAAI,EAAGA,EAAI0C,EAAG1C,IAAK,CACxB,KAAOyE,EAAI,EAAI3E,EAAWO,QAAU1C,KAAKmE,WAAL,OAA0B9B,IAAMF,EAAW2E,EAAI,IAC/EA,IAEA9G,KAAKmE,WAAL,OAA0B9B,IAAMF,EAAW2E,KAC3C0D,GACID,EAAyBzD,GAAG9G,KAAKmE,WAAL,OAA0B9B,IAGlEmI,GACKxK,KAAKmD,iBAAiBnD,KAAKmE,WAAL,WAC3BoG,EAA2BA,EAAyBnI,IAChD,SAACqI,GAAD,OAAUA,EAAKD,IAInB,IAlC2C,IAAAE,EAAA,SAkClC3E,GACL,IAAI4E,EAAmBpI,EAAcH,IAAI,SAAC8D,EAAKY,GAAN,OACrCZ,EAAMqE,EAAyBzD,IAAIuD,EAAqBtE,GAAG,IAAMqE,EAAKzC,mBAGtEiD,EAAoBR,EAAKS,uBAAuB1I,EAAYwI,GAC5DG,EAAsBV,EAAKW,yBAAyB5I,EAAYwI,GAChEK,EAAaZ,EAAKa,gBAAgB9I,EAAYwI,EAAkBC,GAChEM,EAAoBd,EAAKe,uBAAuBH,EAAYF,GAEhER,EAAcvE,GAAKiF,EACd5I,IAAI,SAACwE,EAAGvE,GAAJ,OAAUuE,EAAEsE,EAAkB7I,KAClCqE,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAC7B0D,EAAcvE,GAAKuE,EAAcvE,IAAM,EAAIuE,EAAcvE,GAAK,EAC9DuE,EAAcvE,GAAKuE,EAAcvE,GAAGqE,EAAKjG,WAAL,gBAd/B4B,EAAI,EAAGA,EAAIsE,EAAqB3H,OAAQqD,IAAK2E,EAA7C3E,GAiBT,IAAIqF,EAAcf,EAAqBjI,IAAI,SAAC8D,EAAKH,GAC7C,MAAO,CAACY,EAAKT,EAAKU,EAAK,IAAI0D,EAAcvE,MAI7C,OAFAqF,EAAYC,QAAQ,CAAC1E,EAAK,EAAGC,EAAK,IAE3BwE,IA1bf,CAAA7K,IAAA,kBAAAC,MAAA,SA6boB2B,EAAYI,GACxB,IAAI6I,EAAcpL,KAAKsL,oBAAoBnJ,EAAYI,GAEvDvC,KAAKuL,gBAAkB,CACnBvB,SAAU,CAAC,CACPnB,MAAO,gBACPoB,KAAM,CAAC,CAACtD,EAAK,IAAI3G,KAAK2H,gBAAiBf,EAAK,IAAI5G,KAAKsD,yBACrDkI,YAAa,EACbtB,gBAAiB,WAClB,CACCrB,MAAO,eACPoB,KAAMmB,EACNK,UAAU,EACVD,YAAa,KAIrBxL,KAAK0L,mBAAqB,CACtBxD,YAAY,EACZC,YAAa,IACbC,QAAS,CACLC,OAAQ,CACJwB,SAAS,GAEblB,QAAS,CACLC,UAAW,CACPC,MAAO,SAASC,GAOZ,MAAO,CANK,8BACNA,EAAQE,OAAOrC,EAAE5D,YAAY,GAC7B,IACM,yBACN+F,EAAQE,OAAOpC,EAAE7D,YAAY,GAC7B,4BAMtB4I,SAAU,CACNC,KAAM,CACFrC,YAAa,YACbsC,QAAS,KAGjBzC,OAAQ,CACJzC,EAAG,CACCiD,MAAO,CACHC,SAAS,EACTC,KAAM,gCACNtB,MAAO,QACPC,KAAM,CACFC,KAAM,KAGdY,KAAM,CACFd,MAAO,YACPe,YAAa,YACbC,UAAW,YACXC,YAAa,EACbC,UAAW,GAEfC,MAAO,CACHnB,MAAO,QACPC,KAAM,CACFC,KAAM,MAIlB9B,EAAG,CACCgD,MAAO,CACHC,SAAS,EACTC,KAAM,qCACNtB,MAAO,QACPC,KAAM,CACFC,KAAM,KAGdY,KAAM,CACFd,MAAO,YACPe,YAAa,YACbC,UAAW,YACXC,YAAa,EACbC,UAAW,GAEfC,MAAO,CACHnB,MAAO,QACPC,KAAM,CACFC,KAAM,UAphBlC,CAAAnI,IAAA,gBAAAC,MAAA,WA4hBQ,IAAIsL,EAAW9L,KAAKiG,oBACpBjG,KAAK+L,iBAAmBD,EAAQ,WAChC9L,KAAKgM,oBAAsBF,EAAQ,cAEnC,IAAI3J,EAAanC,KAAK+L,iBAAiB3J,IAAI,SAACrB,GAAD,OAAe,IAAIA,IAC1DwB,EAAgBvC,KAAKgM,oBAAoB5J,IAAI,SAAC6J,GAAD,OAAUA,EAAK,MAE5DpF,EAAiB7G,KAAK6K,uBAAuB1I,EAAYI,GACzDyE,EAAmBhH,KAAK+K,yBAAyB5I,EAAYI,GAE7D2E,EAAUlH,KAAKiL,gBAAgB9I,EAAYI,EAAesE,GAC1DU,EAAiBvH,KAAKmL,uBAAuBjE,EAASF,GAE1DhH,KAAKkM,sBAAsB/J,EAAYI,EAAe2E,EAASK,GAC/DvH,KAAKmM,0BAA0BjF,EAASK,GAExCvH,KAAKoM,sBACLpM,KAAKqM,gBAAgBlK,EAAYI,KA7iBzC,CAAAhC,IAAA,kBAAAC,MAAA,SA+iBoB6B,GACZ,IAAIF,EAAanC,KAAK2E,MAAMxC,WAAWsE,QACnClE,EAAgBvC,KAAK2E,MAAMpC,cAAckE,QAEzCpE,EAAI,EAAIF,EAAWO,QACnBP,EAAWmK,OAAOjK,EAAI,EAAG,EAAG,MAC5BE,EAAc+J,OAAOjK,EAAI,EAAG,EAAG,QAE/BF,EAAWsD,KAAK,MAChBlD,EAAckD,KAAK,OAGvBzF,KAAKwF,SAAS,CACVrD,WAAYA,EACZI,cAAeA,MA7jB3B,CAAAhC,IAAA,kBAAAC,MAAA,SAgkBoB6B,GACZ,IAAIF,EAAanC,KAAK2E,MAAMxC,WAAWsE,QACnClE,EAAgBvC,KAAK2E,MAAMpC,cAAckE,QAEzCpE,EAAI,GACJF,EAAWmK,OAAOjK,EAAG,EAAG,MACxBE,EAAc+J,OAAOjK,EAAG,EAAG,QAE3BF,EAAWkJ,QAAQ,MACnB9I,EAAc8I,QAAQ,OAG1BrL,KAAKwF,SAAS,CACVrD,WAAYA,EACZI,cAAeA,MA9kB3B,CAAAhC,IAAA,gBAAAC,MAAA,SAilBkB6B,GACV,IAAIF,EAAanC,KAAK2E,MAAMxC,WAAWsE,QACnClE,EAAgBvC,KAAK2E,MAAMpC,cAAckE,QAE7CtE,EAAWmK,OAAOjK,EAAG,GACrBE,EAAc+J,OAAOjK,EAAG,GAExBrC,KAAKwF,SAAS,CACVrD,WAAYA,EACZI,cAAeA,MA1lB3B,CAAAhC,IAAA,wBAAAC,MAAA,SA6lB0B6B,EAAGkK,GACrB,IAAIpK,EAAanC,KAAK2E,MAAMxC,WAC5BA,EAAWE,GAAKmK,OAAOD,EAAME,OAAOjM,OAChC2B,EAAWE,GAAK,IAChBF,EAAWE,GAAK,GAEpBrC,KAAKwF,SAAS,CAACrD,WAAYA,MAnmBnC,CAAA5B,IAAA,2BAAAC,MAAA,SAqmB6B6B,EAAGkK,GACxB,IAAIhK,EAAgBvC,KAAK2E,MAAMpC,cAC/BA,EAAcF,GAAKmK,OAAOD,EAAME,OAAOjM,OACnC+B,EAAcF,GAAK,EACnBE,EAAcF,GAAK,EACZE,EAAcF,GAAK,KAC1BE,EAAcF,GAAK,IAEvBrC,KAAKwF,SAAS,CAACjD,cAAeA,MA7mBtC,CAAAhC,IAAA,qCAAAC,MAAA,SA+mBuC+L,GAC/BvM,KAAKwF,SAAS,CACVX,uBAAwB0H,EAAME,OAAOjM,UAjnBjD,CAAAD,IAAA,oCAAAC,MAAA,SAonBsC+L,GAC9BvM,KAAKwF,SAAS,CACVZ,sBAAuB2H,EAAME,OAAOjM,UAtnBhD,CAAAD,IAAA,iCAAAC,MAAA,SAynBmC+L,GAC3BvM,KAAKwF,SAAS,CACVV,mBAAoByH,EAAME,OAAOjM,UA3nB7C,CAAAD,IAAA,qBAAAC,MAAA,WA+nBQ,IAAMkM,EAAYC,SAASC,eAAe,mBAC5B,IAAIC,IAAMH,GAClBI,SAjoBd,CAAAvM,IAAA,SAAAC,MAAA,WAmoBa,IAAAuM,EAAA/M,KAEL,OADAA,KAAKgN,gBAEDvM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,OAAgCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,cAEpCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,kQACAF,EAAAC,EAAAC,cAAA,8MAIZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACsM,EAAD,CACIC,UAAWlN,KAAK2E,MAAMuI,UACtB/K,WAAYnC,KAAK2E,MAAMxC,WACvBI,cAAevC,KAAK2E,MAAMpC,cAC1BC,YAAaxC,KAAK2E,MAAMxC,WAAWC,IAC/B,SAACrB,EAAWsB,GAAZ,OAAkB0K,EAAKI,iBAAiB,IAAIpM,KAEhDE,sBAAuBjB,KAAK2E,MAAMxC,WAAWC,IACzC,SAACgL,EAAI/K,GAAL,OAAY,SAACkK,GAAD,OAAWQ,EAAK9L,sBAAsBoB,EAAGkK,MAEzDjL,yBAA0BtB,KAAK2E,MAAMxC,WAAWC,IAC5C,SAACgL,EAAI/K,GAAL,OAAY,SAACkK,GAAD,OAAWQ,EAAKzL,yBAAyBe,EAAGkK,MAE5D9J,cAAezC,KAAK2E,MAAMxC,WAAWC,IACjC,SAACgL,EAAI/K,GAAL,OAAY,kBAAM0K,EAAKtK,cAAcJ,SAIjD5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLD,UAAU,yBACVc,QAAS,kBAAMqL,EAAKM,gBAAgBN,EAAKpI,MAAMxC,WAAWO,UAE1DjC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBALjB,qBAQJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLD,UAAU,yBACVc,QAAS,kBAAMqL,EAAKO,iBAEpB7M,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BALjB,uBAQJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLD,UAAU,wBACVc,QAAS,kBAAMqL,EAAKQ,kBAEpB9M,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCALjB,qBAc5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAcH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,cAA5B,gBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,kZACAF,EAAAC,EAAAC,cAAA,oPAIZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SACI6M,QAAQ,sBACR5M,UAAU,wBAEVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,+BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAf,kBAAqEZ,KAAK2E,MAAME,2BAI5FpE,EAAAC,EAAAC,cAAA,SACIE,KAAK,QACLD,UAAU,uBACVJ,MAAOR,KAAK2E,MAAME,uBAClB1D,IAAI,IACJI,IAAI,IACJL,KAAK,MACLkM,GAAG,sBACHpM,SAAUhB,KAAKqE,qCAEnB5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAb,gPAAqSH,EAAAC,EAAAC,cAAA,qBAArS,2LAEJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SACI6M,QAAQ,oBACR5M,UAAU,wBAEVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,6BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAf,kBAAiEZ,KAAK2E,MAAMC,0BAIxFnE,EAAAC,EAAAC,cAAA,SACIE,KAAK,QACLD,UAAU,uBACVJ,MAAOR,KAAK2E,MAAMC,sBAClBzD,IAAI,IACJI,IAAI,IACJL,KAAK,MACLkM,GAAG,oBACHpM,SAAUhB,KAAKwE,oCAEnB/D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAb,+QAA4TH,EAAAC,EAAAC,cAAA,2BAA5T,uMAEJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SACI6M,QAAQ,iBACR5M,UAAU,wBAEVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,oDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAf,kBAAkEZ,KAAK2E,MAAMG,uBAIzFrE,EAAAC,EAAAC,cAAA,SACIE,KAAK,QACLD,UAAU,uBACVJ,MAAOR,KAAK2E,MAAMG,mBAClB3D,IAAI,MACJI,IAAI,IACJL,KAAK,MACLkM,GAAG,iBACHpM,SAAUhB,KAAKyE,iCAEnBhE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAb,goBAOxBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,WAAoCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,aAExCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,qiBAIZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC8M,EAAD,CACItL,WAAYnC,KAAK+L,iBACjBxJ,cAAevC,KAAKgM,oBACpBlJ,YAAa9C,KAAK8C,YAClBG,mBAAoBjD,KAAKiD,mBACzBD,WAAYhD,KAAKgD,WACjBE,kBAAmBlD,KAAKkD,kBACxBC,iBAAkBnD,KAAKmD,iBACvBE,wBAAyBrD,KAAKqD,wBAC9BD,gBAAiBpD,KAAKoD,gBACtBE,uBAAwBtD,KAAKsD,8BAQrD7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,6JACAF,EAAAC,EAAAC,cAAA,+NAIZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAKzD,KAAMjK,KAAK+J,oBAAqB4D,QAAS3N,KAAKiI,+BAQ3ExH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,4jBACAF,EAAAC,EAAAC,cAAA,uTACAF,EAAAC,EAAAC,cAAA,4XAIZF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAASzD,KAAMjK,KAAKuL,gBAAiBoC,QAAS3N,KAAK0L,gCAt3B3FzH,EAAA,CAAwCrC,IAAMC,WCxBjC+L,IAASC,WAAWlB,SAASC,eAAe,SACpDkB,OACDrN,EAAAC,EAAAC,cAACoN,EAAD","file":"static/js/main.6cdae63f.chunk.js","sourcesContent":["import React from 'react';\n\nexport class WealthTaxBracket extends React.Component {\n    render() {\n        return(\n            <tr>\n                <td className=\"ps-0\">\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        value={this.props.threshold}\n                        onChange={this.props.handleChangeThreshold}\n                        step=\"0.1\"\n                        min=\"0\"\n                        placeholder=\"E.g., 50 to mean $50m\"\n                    />\n                </td>\n                <td className=\"ps-0\">\n                    <input\n                        type=\"number\"\n                        className=\"form-control\"\n                        value={this.props.marginalRate}\n                        onChange={this.props.handleChangeMarginalRate}\n                        step=\"0.1\"\n                        min=\"0\"\n                        max=\"99\"\n                        placeholder=\"E.g., 2 to mean 2%\"\n                    />\n                </td>\n                <td className=\"px-0\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-danger btn-sm\"\n                        disabled={this.props.removeDisabled}\n                        onClick={this.props.onClickRemove}\n                    >\n                        <i className=\"fa-solid fa-trash-can\"></i>\n                    </button>\n                </td>\n            </tr>\n        );\n    }\n}\n","import React from 'react';\nimport { WealthTaxBracket } from './WealthTaxBracket';\n\nexport class WealthTaxSchedule extends React.Component {\n    render() {\n        return(\n            <table className=\"table align-middle tax-brackets\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" className=\"ps-0\" style={{width: '50%'}}>Threshold (millions of $)</th>\n                        <th scope=\"col\" className=\"ps-0\" style={{width: '50%'}}>Marginal tax rate (%)</th>\n                        <th scope=\"col\" className=\"px-0\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                {\n                    this.props.thresholds.map((threshold, i) =>\n                        <WealthTaxBracket\n                            key={i}\n                            threshold={this.props.thresholds[i]}\n                            marginalRate={this.props.marginalRates[i]}\n                            popImpacted={this.props.popImpacted[i]}\n                            handleChangeThreshold={this.props.handleChangeThreshold[i]}\n                            handleChangeMarginalRate={this.props.handleChangeMarginalRate[i]}\n                            onClickRemove={this.props.removeBracket[i]}\n                            removeDisabled={this.props.thresholds.length === 1}\n                        />\n                    )\n                }\n                </tbody>\n            </table>\n        );\n    }\n}\n","import React from 'react';\n\nexport class WealthTaxRevenue extends React.Component {\n    render() {\n        return(\n            <div className=\"table-responsive p-0\">\n                <table className=\"table align-middle tax-revenue\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" rowSpan=\"2\">Bracket</th>\n                            <th scope=\"col\" colSpan=\"2\">People (% of adult pop.)</th>\n                            <th scope=\"col\" colSpan=\"2\">Revenue (% of national income)</th>\n                        </tr>\n                        <tr>\n                            <th scope=\"col\">Short-Run</th>\n                            <th scope=\"col\">Long-Run</th>\n                            <th scope=\"col\">Short-Run</th>\n                            <th scope=\"col\">Long-Run</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.props.thresholds.map((threshold, i) =>\n                                <tr key={i}>\n                                    <td>${this.props.thresholds[i]}m</td>\n                                    <td>{(100*this.props.popShortRun[i]).toPrecision(2)}%</td>\n                                    <td>{(100*this.props.popLongRun[i]).toPrecision(2)}%</td>\n                                    <td>{(100*this.props.taxRevenueShortRun[i]).toPrecision(2)}%</td>\n                                    <td>{(100*this.props.taxRevenueLongRun[i]).toPrecision(2)}%</td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td>Total</td>\n                            <td>{(100*this.props.totalPopShortRun).toPrecision(2)}%</td>\n                            <td>{(100*this.props.totalPopLongRun).toPrecision(2)}%</td>\n                            <td>{(100*this.props.totalTaxRevenueShortRun).toPrecision(2)}%</td>\n                            <td>{(100*this.props.totalTaxRevenueLongRun).toPrecision(2)}%</td>\n                        </tr>\n                    </tfoot>\n                </table>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Toast } from 'bootstrap';\n\nimport { WealthTaxSchedule } from './WealthTaxSchedule';\nimport { WealthTaxRevenue } from './WealthTaxRevenue';\n\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\nimport { Bar, Scatter } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nexport class WealthTaxSimulator extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.wealthData = require(\"./wealth-data.json\");\n\n        this.handleChangeTaxAvoidanceElasticity = this.handleChangeTaxAvoidanceElasticity.bind(this);\n        this.handleChangeConsumptionElasticity = this.handleChangeConsumptionElasticity.bind(this);\n        this.handleChangeMobilityAdjustment = this.handleChangeMobilityAdjustment.bind(this);\n        this.handleChangeThreshold = this.handleChangeThreshold.bind(this);\n        this.handleChangeMarginalRate = this.handleChangeMarginalRate.bind(this);\n\n        this.estimateBaselineInequality();\n\n        this.state = {\n            thresholds: [50, 200, 500, 1000],\n            marginalRates: [2, 4, 6, 10],\n            consumptionElasticity: 1,\n            taxAvoidanceElasticity: 1,\n            mobilityAdjustment: 1\n        };\n    }\n    estimateBaselineInequality() {\n        let n = this.wealthData['weight'].length;\n        this.shareTop10 = 0;\n        this.shareTop5 = 0;\n        this.shareTop1 = 0;\n        this.shareTop01 = 0;\n        this.shareTop001 = 0;\n        let cumWeights = 0;\n        for (let i = 0; i < n; i++) {\n            let wgt = this.wealthData['weight'][n - i - 1];\n            cumWeights += wgt;\n            let p = 100*cumWeights/this.wealthData['population'];\n            if (p < 0.01) {\n                this.shareTop001 += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop01  += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop1   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop5   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else if (p < 0.1) {\n                this.shareTop01  += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop1   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop5   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else if (p < 1) {\n                this.shareTop1   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop5   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else if (p < 5) {\n                this.shareTop5   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else if (p < 10) {\n                this.shareTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else {\n                break;\n            }\n        }\n        this.shareTop10  = this.shareTop10  / this.wealthData['nationalWealth'];\n        this.shareTop5   = this.shareTop5   / this.wealthData['nationalWealth'];\n        this.shareTop1   = this.shareTop1   / this.wealthData['nationalWealth'];\n        this.shareTop01  = this.shareTop01  / this.wealthData['nationalWealth'];\n        this.shareTop001 = this.shareTop001 / this.wealthData['nationalWealth'];\n    }\n    resetBrackets() {\n        this.setState({\n            thresholds: [50, 200, 500, 1000],\n            marginalRates: [2, 4, 6, 10]\n        });\n    }\n    getSortedBrackets() {\n        let n = this.state.thresholds.length;\n\n        let thresholds = [];\n        let marginalRates = [];\n        for (let i = 0; i < n; i++) {\n            if (this.state.thresholds[i] != null & this.state.marginalRates[i] != null) {\n                thresholds.push(this.state.thresholds[i]);\n                marginalRates.push(this.state.marginalRates[i]);\n            }\n        }\n        n = thresholds.length;\n\n        let indexes = new Array(n);\n        indexes.fill(0);\n        indexes = indexes.map((elem, i) => i);\n\n        indexes = indexes.sort((i, j) => thresholds[i] - thresholds[j]);\n\n        thresholds = indexes.map((idx, i) => thresholds[idx]);\n        marginalRates = indexes.map((idx, i) => marginalRates[idx]);\n\n        return({\n            thresholds: thresholds,\n            marginalRates: marginalRates,\n        });\n    }\n    sortBrackets() {\n        this.setState(this.getSortedBrackets());\n    }\n    taxAvoidance(mtr) {\n        if (mtr >= 1) {\n            return 0;\n        } else if (mtr <= 0) {\n            return 1;\n        } else {\n            return Math.pow(1 - mtr, this.state.taxAvoidanceElasticity);\n        }\n    }\n    consumptionResponse(mtr) {\n        if (mtr >= 1) {\n            return Infinity;\n        } else if (mtr <= 0) {\n            return 0;\n        } else {\n            return Math.pow(1 - mtr, -this.state.consumptionElasticity) - 1;\n        }\n    }\n    estimatePopAbove(threshold) {\n        let indexesAbove = this.wealthData['wealth'].findIndex((w) => w > threshold);\n        let popAbove = this.wealthData['weight'].slice(indexesAbove).reduce((x, y) => x + y, 0);\n        return popAbove/this.wealthData['population'];\n    }\n    estimateDeclaredWealth(thresholds, marginalRates) {\n        let n = this.wealthData['wealth'].length;\n        let declaredWealth = this.wealthData['wealth'].slice();\n\n        let k = 0;\n        for (let i = 0; i < n; i++) {\n            while (k + 1 < thresholds.length && this.wealthData['wealth'][i] >= thresholds[k + 1]) {\n                k++;\n            }\n            if (this.wealthData['wealth'][i] >= thresholds[k]) {\n                declaredWealth[i] = declaredWealth[i]*this.taxAvoidance(marginalRates[k]);\n            }\n        }\n        return declaredWealth;\n    }\n    estimateExtraConsumption(thresholds, marginalRates) {\n        let n = this.wealthData['wealth'].length;\n        let extraConsumption = new Array(n);\n        extraConsumption.fill(0);\n\n        let k = 0;\n        for (let i = 0; i < n; i++) {\n            while (k + 1 < thresholds.length && this.wealthData['wealth'][i] >= thresholds[k + 1]) {\n                k++;\n            }\n            if (this.wealthData['wealth'][i] >= thresholds[k]) {\n                extraConsumption[i] = this.wealthData['consumption'][i]*this.consumptionResponse(marginalRates[k]);\n            }\n        }\n        return extraConsumption;\n    }\n    estimateTaxPaid(thresholds, marginalRates, declaredWealth) {\n        let n = declaredWealth.length;\n        let taxPaid = new Array(n);\n        taxPaid.fill(0);\n        for (let k = 0; k < thresholds.length; k++) {\n            for (let i = 0; i < n; i++) {\n                if (k + 1 < thresholds.length && declaredWealth[i] >= thresholds[k + 1]) {\n                    taxPaid[i] += (thresholds[k + 1] - thresholds[k])*marginalRates[k];\n                } else if (declaredWealth[i] >= thresholds[k]) {\n                    taxPaid[i] += (declaredWealth[i] - thresholds[k])*marginalRates[k];\n                }\n            }\n        }\n        return(taxPaid);\n    }\n    estimateLongRunWeights(taxPaid, extraConsumption) {\n        let n = taxPaid.length;\n\n        let longRunReweighting = new Array(n);\n        longRunReweighting.fill(0);\n        for (let i = 1; i < n; i++) {\n            let dw = this.wealthData['wealth'][i] - this.wealthData['wealth'][i - 1];\n            longRunReweighting[i] = longRunReweighting[i - 1] +\n                2*(taxPaid[i] + extraConsumption[i])/Math.pow(this.state.mobilityAdjustment*this.wealthData['diffusion'][i], 2)*dw;\n        }\n        longRunReweighting = longRunReweighting.map((y) => Math.exp(-y));\n\n        // New weights, rescaled to the population total\n        let longRunWeights = this.wealthData['weight'].map(\n            (w, i) => w*longRunReweighting[i]\n        );\n        let sumLongRunWeights = longRunWeights.reduce((x, y) => x + y, 0);\n        longRunWeights = longRunWeights.map(\n            (w) => w*(this.wealthData['population']/sumLongRunWeights)\n        );\n        return(longRunWeights);\n    }\n    estimateTaxStatistics(thresholds, marginalRates, taxPaid, longRunWeights) {\n        let n = longRunWeights.length;\n\n        this.longRunWealth = this.wealthData['wealth']\n            .map((w, i) => w*longRunWeights[i])\n            .reduce((x, y) => x + y, 0);\n\n        this.taxRevenueShortRun = new Array(thresholds.length);\n        this.taxRevenueShortRun.fill(0);\n        this.taxRevenueLongRun = new Array(thresholds.length);\n        this.taxRevenueLongRun.fill(0);\n        this.popShortRun = new Array(thresholds.length);\n        this.popShortRun.fill(0);\n        this.popLongRun = new Array(thresholds.length);\n        this.popLongRun.fill(0);\n\n        this.avgMarginalRate = 0;\n\n        let k = 0;\n        for (let i = 0; i < n; i++) {\n            while (k + 1 < thresholds.length && this.wealthData['wealth'][i] >= thresholds[k + 1]) {\n                k++;\n            }\n            if (this.wealthData['wealth'][i] >= thresholds[k]) {\n                this.popLongRun[k] += longRunWeights[i];\n                this.popShortRun[k] += this.wealthData['weight'][i];\n\n                this.taxRevenueLongRun[k] += taxPaid[i]*longRunWeights[i];\n                this.taxRevenueShortRun[k] += taxPaid[i]*this.wealthData['weight'][i];\n\n                this.avgMarginalRate += marginalRates[k]*this.wealthData['weight'][i];\n            }\n        }\n        this.taxRevenueLongRun = this.taxRevenueLongRun.map((y, i) => y/this.wealthData['nationalIncome']);\n        this.taxRevenueShortRun = this.taxRevenueShortRun.map((y, i) => y/this.wealthData['nationalIncome']);\n        this.popLongRun = this.popLongRun.map((y, i) => y/this.wealthData['population']);\n        this.popShortRun = this.popShortRun.map((y, i) => y/this.wealthData['population']);\n\n        this.totalTaxRevenueLongRun = this.taxRevenueLongRun.reduce((x, y) => x + y, 0);\n        this.totalTaxRevenueShortRun = this.taxRevenueShortRun.reduce((x, y) => x + y, 0);\n        this.totalPopLongRun = this.popLongRun.reduce((x, y) => x + y, 0);\n        this.totalPopShortRun = this.popShortRun.reduce((x, y) => x + y, 0);\n\n        this.avgMarginalRate = this.avgMarginalRate/(this.totalPopShortRun*this.wealthData['population']);\n\n        // Zap small values\n        this.taxRevenueLongRun = this.taxRevenueLongRun.map((y) => y < 1e-8 ? 0 : y);\n        this.taxRevenueShortRun = this.taxRevenueShortRun.map((y) => y < 1e-8 ? 0 : y);\n        this.popLongRun = this.popLongRun.map((y) => y < 1e-8 ? 0 : y);\n        this.popShortRun = this.popShortRun.map((y) => y < 1e-8 ? 0 : y);\n    }\n    estimateLongRunInequality(taxPaid, longRunWeights) {\n        let n = longRunWeights.length;\n\n        this.shareLongRunTop10 = 0;\n        this.shareLongRunTop5 = 0;\n        this.shareLongRunTop1 = 0;\n        this.shareLongRunTop01 = 0;\n        this.shareLongRunTop001 = 0;\n        let cumWeights = 0;\n        for (let i = 0; i < n; i++) {\n            let wgt = longRunWeights[n - i - 1];\n            cumWeights += wgt;\n            let p = 100*cumWeights/this.wealthData['population'];\n            if (p < 0.01) {\n                this.shareLongRunTop001 += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop01  += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop1   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop5   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else if (p < 0.1) {\n                this.shareLongRunTop01  += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop1   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop5   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else if (p < 1) {\n                this.shareLongRunTop1   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop5   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else if (p < 5) {\n                this.shareLongRunTop5   += wgt*this.wealthData['wealth'][n - i - 1];\n                this.shareLongRunTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else if (p < 10) {\n                this.shareLongRunTop10  += wgt*this.wealthData['wealth'][n - i - 1];\n            } else {\n                break;\n            }\n        }\n        this.shareLongRunTop10  = this.shareLongRunTop10  / this.longRunWealth;\n        this.shareLongRunTop5   = this.shareLongRunTop5   / this.longRunWealth;\n        this.shareLongRunTop1   = this.shareLongRunTop1   / this.longRunWealth;\n        this.shareLongRunTop01  = this.shareLongRunTop01  / this.longRunWealth;\n        this.shareLongRunTop001 = this.shareLongRunTop001 / this.longRunWealth;\n    }\n    makeInequalityChart() {\n        this.inequalityChartOptions = {\n            responsive: true,\n            aspectRatio: 1.3,\n            plugins: {\n                legend: {\n                    position: 'bottom',\n                    labels: {\n                        color: \"white\",\n                        font: {\n                            size: 12,\n                        }\n                    }\n                },\n                tooltip: {\n                    callbacks: {\n                        label: function(context) {\n                            let label = context.dataset.label || '';\n\n                            if (label) {\n                                label += ': ';\n                            }\n                            if (context.parsed.y !== null) {\n                                label += context.parsed.y.toPrecision(2);\n                                label += \"%\";\n                            }\n                            return label;\n                        }\n                    }\n                },\n            },\n            interaction: {\n                mode: 'index',\n                intersect: false,\n            },\n            scales: {\n                x: {\n                    stacked: true,\n                    grid: {\n                        color: '#94d2bdff',\n                        borderColor: '#94d2bdff',\n                        tickColor: '#94d2bdff',\n                        borderWidth: 1,\n                        lineWidth: 1,\n                    },\n                    ticks: {\n                        color: \"white\",\n                        font: {\n                            size: 10,\n                        }\n                    },\n                },\n                y: {\n                    stacked: true,\n                    title: {\n                        display: true,\n                        text: \"% of total wealth\",\n                        color: \"white\",\n                        font: {\n                            size: 12,\n                        }\n                    },\n                    grid: {\n                        color: '#94d2bdff',\n                        borderColor: '#94d2bdff',\n                        tickColor: '#94d2bdff',\n                        borderWidth: 1,\n                        lineWidth: 1,\n                    },\n                    ticks: {\n                        color: \"white\",\n                        font: {\n                            size: 10,\n                        }\n                    },\n                },\n            },\n        };\n\n        const labels = ['Top 10%', 'Top 5%', 'Top 1%', 'Top 0.1%', 'Top 0.01%'];\n        this.inequalityChartData = {\n            labels,\n            datasets: [\n                {\n                    label: 'Current wealth share',\n                    data: [this.shareTop10, this.shareTop5, this.shareTop1,\n                        this.shareTop01, this.shareTop001].map((x, i) => 100*x),\n                    backgroundColor: '#005f73',\n                    stack: '0',\n                },\n                {\n                    label: 'In the long run, with the wealth tax',\n                    data: [this.shareLongRunTop10, this.shareLongRunTop5,\n                        this.shareLongRunTop1, this.shareLongRunTop01,\n                        this.shareLongRunTop001].map((x, i) => 100*x),\n                    backgroundColor: '#e76f51',\n                    stack: '1',\n                },\n            ],\n        };\n    }\n    estimateLafferCurve(thresholds, marginalRates) {\n        let n = this.wealthData['wealth'].length;\n\n        // Predefined grid\n        let altMarginalRatesGrid = [\n            0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9,\n            1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\n            15, 20, 25, 30, 35, 40, 45, 50,\n            60, 70, 80, 90, 99, 99.9\n        ];\n        let altTaxRevenue = new Array(altMarginalRatesGrid.length);\n        altTaxRevenue.fill(0);\n\n        // Adjustments coefficients used to match alternative average tax rates\n        // (proportional to mtr*(1 - mtr)\n        let altAvgMarginalRatesCoefs = marginalRates.map((mtr) => 1 - mtr);\n        let altAvgMarginalRatesCoefsMean = 0;\n        let k = 0;\n        for (let i = 0; i < n; i++) {\n            while (k + 1 < thresholds.length && this.wealthData['wealth'][i] >= thresholds[k + 1]) {\n                k++;\n            }\n            if (this.wealthData['wealth'][i] >= thresholds[k]) {\n                altAvgMarginalRatesCoefsMean +=\n                    altAvgMarginalRatesCoefs[k]*this.wealthData['weight'][i];\n            }\n        }\n        altAvgMarginalRatesCoefsMean = altAvgMarginalRatesCoefsMean/\n            (this.totalPopShortRun*this.wealthData['population']);\n        altAvgMarginalRatesCoefs = altAvgMarginalRatesCoefs.map(\n            (coef) => coef/altAvgMarginalRatesCoefsMean\n        );\n\n        // Tax revenue under different assumptions\n        for (let j = 0; j < altMarginalRatesGrid.length; j++) {\n            let altMarginalRates = marginalRates.map((mtr, k) =>\n                mtr + altAvgMarginalRatesCoefs[k]*(altMarginalRatesGrid[j]/100 - this.avgMarginalRate)\n            )\n\n            let altDeclaredWealth = this.estimateDeclaredWealth(thresholds, altMarginalRates);\n            let altExtraConsumption = this.estimateExtraConsumption(thresholds, altMarginalRates);\n            let altTaxPaid = this.estimateTaxPaid(thresholds, altMarginalRates, altDeclaredWealth);\n            let altLongRunWeights = this.estimateLongRunWeights(altTaxPaid, altExtraConsumption);\n\n            altTaxRevenue[j] = altTaxPaid\n                .map((y, i) => y*altLongRunWeights[i])\n                .reduce((x, y) => x + y, 0);\n            altTaxRevenue[j] = altTaxRevenue[j] >= 0 ? altTaxRevenue[j] : 0;\n            altTaxRevenue[j] = altTaxRevenue[j]/this.wealthData['nationalIncome'];\n        }\n\n        let lafferCurve = altMarginalRatesGrid.map((mtr, j) => {\n            return({'x': mtr, 'y': 100*altTaxRevenue[j]});\n        });\n        lafferCurve.unshift({'x': 0, 'y': 0});\n\n        return lafferCurve;\n    }\n\n    makeLafferChart(thresholds, marginalRates) {\n        let lafferCurve = this.estimateLafferCurve(thresholds, marginalRates);\n\n        this.lafferChartData = {\n            datasets: [{\n                label: 'Current point',\n                data: [{'x': 100*this.avgMarginalRate, 'y': 100*this.totalTaxRevenueLongRun}],\n                pointRadius: 5,\n                backgroundColor: '#e76f51',\n            }, {\n                label: 'Laffer curve',\n                data: lafferCurve,\n                showLine: true,\n                pointRadius: 0\n            }],\n        };\n\n        this.lafferChartOptions = {\n            responsive: true,\n            aspectRatio: 1.3,\n            plugins: {\n                legend: {\n                    display: false,\n                },\n                tooltip: {\n                    callbacks: {\n                        label: function(context) {\n                            let line1 = \"Average marginal tax rate: \"\n                                + context.parsed.x.toPrecision(2)\n                                + \"%\";\n                            let line2 = \"Long-run tax revenue: \"\n                                + context.parsed.y.toPrecision(2)\n                                + \"% of national income\";\n                            return [line1, line2];\n                        }\n                    }\n                },\n            },\n            elements: {\n                line: {\n                    borderColor: '#005f73ff',\n                    tension: 0.4,\n                },\n            },\n            scales: {\n                x: {\n                    title: {\n                        display: true,\n                        text: \"average marginal tax rate (%)\",\n                        color: \"white\",\n                        font: {\n                            size: 12,\n                        }\n                    },\n                    grid: {\n                        color: '#94d2bdff',\n                        borderColor: '#94d2bdff',\n                        tickColor: '#94d2bdff',\n                        borderWidth: 1,\n                        lineWidth: 1,\n                    },\n                    ticks: {\n                        color: \"white\",\n                        font: {\n                            size: 10,\n                        }\n                    },\n                },\n                y: {\n                    title: {\n                        display: true,\n                        text: \"tax revenue (% of national income)\",\n                        color: \"white\",\n                        font: {\n                            size: 12,\n                        }\n                    },\n                    grid: {\n                        color: '#94d2bdff',\n                        borderColor: '#94d2bdff',\n                        tickColor: '#94d2bdff',\n                        borderWidth: 1,\n                        lineWidth: 1,\n                    },\n                    ticks: {\n                        color: \"white\",\n                        font: {\n                            size: 10,\n                        }\n                    },\n                },\n            },\n        }\n    }\n    runSimulation() {\n        let brackets = this.getSortedBrackets();\n        this.sortedThresholds = brackets['thresholds'];\n        this.sortedMarginalRates = brackets['marginalRates'];\n\n        let thresholds = this.sortedThresholds.map((threshold) => 1e6*threshold);\n        let marginalRates = this.sortedMarginalRates.map((rate) => rate/100);\n\n        let declaredWealth = this.estimateDeclaredWealth(thresholds, marginalRates);\n        let extraConsumption = this.estimateExtraConsumption(thresholds, marginalRates);\n\n        let taxPaid = this.estimateTaxPaid(thresholds, marginalRates, declaredWealth);\n        let longRunWeights = this.estimateLongRunWeights(taxPaid, extraConsumption);\n\n        this.estimateTaxStatistics(thresholds, marginalRates, taxPaid, longRunWeights);\n        this.estimateLongRunInequality(taxPaid, longRunWeights);\n\n        this.makeInequalityChart();\n        this.makeLafferChart(thresholds, marginalRates);\n    }\n    addBracketBelow(i) {\n        let thresholds = this.state.thresholds.slice();\n        let marginalRates = this.state.marginalRates.slice();\n\n        if (i + 1 < thresholds.length) {\n            thresholds.splice(i + 1, 0, null);\n            marginalRates.splice(i + 1, 0, null);\n        } else {\n            thresholds.push(null);\n            marginalRates.push(null);\n        }\n\n        this.setState({\n            thresholds: thresholds,\n            marginalRates: marginalRates\n        });\n    }\n    addBracketAbove(i) {\n        let thresholds = this.state.thresholds.slice();\n        let marginalRates = this.state.marginalRates.slice();\n\n        if (i > 1) {\n            thresholds.splice(i, 0, null);\n            marginalRates.splice(i, 0, null);\n        } else {\n            thresholds.unshift(null);\n            marginalRates.unshift(null);\n        }\n\n        this.setState({\n            thresholds: thresholds,\n            marginalRates: marginalRates\n        });\n    }\n    removeBracket(i) {\n        let thresholds = this.state.thresholds.slice();\n        let marginalRates = this.state.marginalRates.slice();\n\n        thresholds.splice(i, 1);\n        marginalRates.splice(i, 1);\n\n        this.setState({\n            thresholds: thresholds,\n            marginalRates: marginalRates\n        });\n    }\n    handleChangeThreshold(i, event) {\n        let thresholds = this.state.thresholds;\n        thresholds[i] = Number(event.target.value);\n        if (thresholds[i] < 0) {\n            thresholds[i] = 0;\n        }\n        this.setState({thresholds: thresholds});\n    }\n    handleChangeMarginalRate(i, event) {\n        let marginalRates = this.state.marginalRates;\n        marginalRates[i] = Number(event.target.value);\n        if (marginalRates[i] < 0) {\n            marginalRates[i] = 0;\n        } else if (marginalRates[i] > 99) {\n            marginalRates[i] = 99;\n        }\n        this.setState({marginalRates: marginalRates});\n    }\n    handleChangeTaxAvoidanceElasticity(event) {\n        this.setState({\n            taxAvoidanceElasticity: event.target.value\n        });\n    }\n    handleChangeConsumptionElasticity(event) {\n        this.setState({\n            consumptionElasticity: event.target.value\n        });\n    }\n    handleChangeMobilityAdjustment(event) {\n        this.setState({\n            mobilityAdjustment: event.target.value\n        });\n    }\n    componentDidUpdate() {\n        const toastElem = document.getElementById('completed-alert');\n        const toast = new Toast(toastElem);\n        toast.show();\n    }\n    render() {\n        this.runSimulation()\n        return(\n            <div className=\"container\">\n                <div className=\"row mb-5 justify-content-center\">\n                    <div className=\"row\">\n                        <h2 className=\"text-shadow\">Tax <span className=\"title-highlight-alt\">Schedule</span></h2>\n                    </div>\n                    <div className=\"row justify-content-around\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 pt-2 mb-3 shadow\">\n                                <div className=\"card-body\">\n                                    <h5>Define your own wealth tax schedule</h5>\n                                    <p>Use this section to define your tax schedule: you can specify any number of brackets by indicating their lower thresholds (expressed in millions of dollars) and the corresponding marginal tax rate on wealth (in percent) to apply in each of them.</p>\n                                    <p>Don’t worry about the order. The program automatically sorts the brackets from the lowest to the highest threshold. If you prefer, use “Sort brackets” to sort them explicitly.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 mb-3 shadow color-alt\">\n                                <div className=\"card-body\">\n                                    <div className=\"row ps-3 pe-3\">\n                                        <WealthTaxSchedule\n                                            bracketId={this.state.bracketId}\n                                            thresholds={this.state.thresholds}\n                                            marginalRates={this.state.marginalRates}\n                                            popImpacted={this.state.thresholds.map(\n                                                (threshold, i) => this.estimatePopAbove(1e6*threshold)\n                                            )}\n                                            handleChangeThreshold={this.state.thresholds.map(\n                                                (id, i) => ((event) => this.handleChangeThreshold(i, event))\n                                            )}\n                                            handleChangeMarginalRate={this.state.thresholds.map(\n                                                (id, i) => ((event) => this.handleChangeMarginalRate(i, event))\n                                            )}\n                                            removeBracket={this.state.thresholds.map(\n                                                (id, i) => (() => this.removeBracket(i))\n                                            )}\n                                        />\n                                    </div>\n                                    <div className=\"row justify-content-end mt-2 pe-1 gx-2 gy-2\">\n                                        <div className=\"col-auto\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-primary btn-sm\"\n                                                onClick={() => this.addBracketAbove(this.state.thresholds.length)}\n                                            >\n                                                <i className=\"fa-solid fa-plus\"></i>&nbsp; Add bracket\n                                            </button>\n                                        </div>\n                                        <div className=\"col-auto\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-primary btn-sm\"\n                                                onClick={() => this.sortBrackets()}\n                                            >\n                                                <i className=\"fa-solid fa-arrow-down-1-9\"></i>&nbsp; Sort brackets\n                                            </button>\n                                        </div>\n                                        <div className=\"col-auto\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-danger btn-sm\"\n                                                onClick={() => this.resetBrackets()}\n                                            >\n                                                <i className=\"fa-solid fa-arrow-rotate-left\"></i>&nbsp; Reset\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row mb-5 justify-content-center\">\n                    <div className=\"row\">\n                        <h2 className=\"text-shadow\"><span className=\"title-highlight-alt\">Behavioral</span> Parameters</h2>\n                    </div>\n                    <div className=\"row justify-content-around\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 pt-2 mb-3 shadow\">\n                                <div className=\"card-body\">\n                                    <h5>Adjust How People React to the Tax</h5>\n                                    <p>Taxation changes how much wealth is available to be taxed. When people have to pay a wealth tax, they end up with less disposable income, so they have less money available for savings. They may also decide to consume more rather than save and pay the tax on the wealth they accumulate. Finally, they may also decide to hide some of their wealth by engaging in tax evasion or tax avoidance.</p>\n                                    <p>This simulator accounts for these effects based on three parameters. You can keep the default settings, with have been chosen to align with the available evidence on reactions to wealth taxes. Or you can choose different values.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 mb-3 shadow behavioral-parameters color-alt\">\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <label\n                                            htmlFor=\"tax-avoidance-range\"\n                                            className=\"form-label ps-3 pe-3\"\n                                        >\n                                            <div className=\"container\">\n                                                <div className=\"row justify-content-start\">\n                                                    <div className=\"col-auto py-1 px-0 me-2\">Elasticity of tax avoidance</div>\n                                                    <div className=\"col-auto parameter py-1 px-2\">&epsilon;&nbsp;=&nbsp;{this.state.taxAvoidanceElasticity}</div>\n                                                </div>\n                                            </div>\n                                        </label>\n                                        <input\n                                            type=\"range\"\n                                            className=\"form-range ps-3 pe-3\"\n                                            value={this.state.taxAvoidanceElasticity}\n                                            min=\"0\"\n                                            max=\"8\"\n                                            step=\"0.1\"\n                                            id=\"tax-avoidance-range\"\n                                            onChange={this.handleChangeTaxAvoidanceElasticity}\n                                        />\n                                        <p className=\"ps-3 pe-3 mt-2 mb-0 muted small\">The elasticity of tax avoidance (&epsilon;) defines how people react to the wealth tax by hiding their wealth. An elasticity &epsilon; means that, in response to a marginal tax rate &tau;, people only report a fraction (1&nbsp;&mdash;&nbsp;&tau;)<sup>&epsilon;</sup> of their wealth to the tax authorities. So for a small rate &tau;&nbsp;=&nbsp;1%, people hide roughly &epsilon;% of their wealth. When &epsilon;% is high, the wealth tax raises less revenue.</p>\n                                    </div>\n                                    <hr/>\n                                    <div className=\"row\">\n                                        <label\n                                            htmlFor=\"consumption-range\"\n                                            className=\"form-label ps-3 pe-3\"\n                                        >\n                                            <div className=\"container\">\n                                                <div className=\"row justify-content-start\">\n                                                    <div className=\"col-auto py-1 px-0 me-2\">Elasticity of consumption</div>\n                                                    <div className=\"col-auto parameter py-1 px-2\">&eta;&nbsp;=&nbsp;{this.state.consumptionElasticity}</div>\n                                                </div>\n                                            </div>\n                                        </label>\n                                        <input\n                                            type=\"range\"\n                                            className=\"form-range ps-3 pe-3\"\n                                            value={this.state.consumptionElasticity}\n                                            min=\"0\"\n                                            max=\"8\"\n                                            step=\"0.1\"\n                                            id=\"consumption-range\"\n                                            onChange={this.handleChangeConsumptionElasticity}\n                                        />\n                                        <p className=\"ps-3 pe-3 mt-2 mb-0 muted small\">The elasticity of consumption (&eta;) defines how much people react to the wealth tax by increasing their consumption. An elasticity of &eta; means that, in response to a marginal tax rate &tau;, people increase their consumption by a factor (1&nbsp;&mdash;&nbsp;&tau;)<sup>&mdash;&eta;</sup>. So for a small rate &tau;&nbsp;=&nbsp;1%, people increase their consumption by roughly &eta;%. When &eta; is high, people accumulate less wealth, so the tax raises less revenue in the long run.</p>\n                                    </div>\n                                    <hr/>\n                                    <div className=\"row\">\n                                        <label\n                                            htmlFor=\"mobility-range\"\n                                            className=\"form-label ps-3 pe-3\"\n                                        >\n                                            <div className=\"container\">\n                                                <div className=\"row justify-content-start\">\n                                                    <div className=\"col-auto py-1 px-0 me-2\">Mobility in the wealth distribution (multiplier)</div>\n                                                    <div className=\"col-auto parameter py-1 px-2\">&beta;&nbsp;=&nbsp;{this.state.mobilityAdjustment}</div>\n                                                </div>\n                                            </div>\n                                        </label>\n                                        <input\n                                            type=\"range\"\n                                            className=\"form-range ps-3 pe-3\"\n                                            value={this.state.mobilityAdjustment}\n                                            min=\"0.1\"\n                                            max=\"3\"\n                                            step=\"0.1\"\n                                            id=\"mobility-range\"\n                                            onChange={this.handleChangeMobilityAdjustment}\n                                        />\n                                        <p className=\"ps-3 pe-3 mt-2 mb-0 muted small\">Mobility in the wealth distribution changes the effects of the wealth tax. When mobility is very high, people only spend a short time in a given wealth bracket. And new people with their previously untaxed wealth keep entering the tax schedule. Therefore, the wealth tax has a limited effect on the distribution. But if mobility is low, the wealth tax repeatedly taxes the same wealth: in the long run, little wealth is left to tax. By default, the model is calibrated to match the wealth mobility observed in the United States. But you can adjust it by a factor &beta;. When &beta; is high, the wealth tax can raise more revenue.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"row\">\n                        <h2 className=\"text-shadow\">See the <span className=\"title-highlight-alt\">Results</span></h2>\n                    </div>\n                    <div className=\"row justify-content-around mb-5\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 pt-2 mb-3 shadow\">\n                                <div className=\"card-body\">\n                                    <h5>How much money does your tax raise?</h5>\n                                    <p>This table describes how much money you get from each wealth tax bracket if your tax were enacted in the United States. It includes two variants: the “short-run” estimate only accounts for tax avoidance and indicates how much revenue you would get during the first few years. But over time, people progressively accumulate less wealth due to the tax. Decades later, the wealth available to be taxed will be lower. The “long-run” estimate shows how much money you will still be able to raise despite these effects.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 mb-3 shadow color-alt\">\n                                <div className=\"card-body\">\n                                    <div className=\"row ps-3 pe-3\">\n                                        <WealthTaxRevenue\n                                            thresholds={this.sortedThresholds}\n                                            marginalRates={this.sortedMarginalRates}\n                                            popShortRun={this.popShortRun}\n                                            taxRevenueShortRun={this.taxRevenueShortRun}\n                                            popLongRun={this.popLongRun}\n                                            taxRevenueLongRun={this.taxRevenueLongRun}\n                                            totalPopShortRun={this.totalPopShortRun}\n                                            totalTaxRevenueShortRun={this.totalTaxRevenueShortRun}\n                                            totalPopLongRun={this.totalPopLongRun}\n                                            totalTaxRevenueLongRun={this.totalTaxRevenueLongRun}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row justify-content-around mb-5\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 pt-2 mb-3 shadow\">\n                                <div className=\"card-body\">\n                                    <h5>How does it affect wealth inequality?</h5>\n                                    <p>Progressive wealth taxation lowers wealth inequality in the long run because it limits the wealthiest people’s ability to accumulate money.</p>\n                                    <p>This chart estimates how large these effects are. For each top wealth group, it shows their current share of wealth and the share of the wealth they would eventually have if the wealth tax were put in place.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 mb-3 shadow color-alt\">\n                                <div className=\"card-body\">\n                                    <div className=\"row ps-3 pe-3\">\n                                        <div>\n                                            <Bar data={this.inequalityChartData} options={this.inequalityChartOptions}/>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row justify-content-around\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 pt-2 mb-3 shadow\">\n                                <div className=\"card-body\">\n                                    <h5>Can you raise more revenue?</h5>\n                                    <p>You face a trade-off when trying to raise as much revenue as possible from a wealth tax. On the one hand, raising the tax rates lets you extract more money from the tax base. On the other hand, higher rates shrink the tax base itself as it makes people accumulate less money. Consider the two extremes: with a 0% tax rate, you raise no revenue. But with a 100% tax rate, you’re unlikely to raise any money either because no one will accumulate wealth if it means having to pay a 100% tax rate. The rate that maximizes tax revenue is somewhere in between.</p>\n                                    <p>This chart looks at variants of the tax schedule you provided. Each variant alters your tax rates so that they go from 0% to 100% on average. For each variant, it calculates the long-run tax revenue. It then plots the results as a line that relates the average marginal tax rate to the tax revenue.</p>\n                                    <p>The result is an inverted U-shaped curve, sometimes called the “Laffer curve.” The point indicates where you currently stand on that curve. If you find yourself in the upward-slopping part, you can raise more revenue by increasing the wealth tax rates. But if you are in the downward sloping part, you can actually raise more money by lowering the rates.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6\">\n                            <div className=\"card mt-3 mb-3 shadow color-alt\">\n                                <div className=\"card-body\">\n                                    <div className=\"row ps-3 pe-3\">\n                                        <Scatter data={this.lafferChartData} options={this.lafferChartOptions}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\nimport { WealthTaxSimulator } from './WealthTaxSimulator';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <WealthTaxSimulator />\n);\n"],"sourceRoot":""}